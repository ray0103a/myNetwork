<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=0.1, maximum-scale=4,user-scalable=yes">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    
    <style>
        ul {
            list-style-type: none;
        }
        li {
            cursor: pointer;
            padding: 10px;
            border: solid #ddd 1px;
        }

        .myli {
            margin-left: 5px;
            margin-right: 5px;
            margin-top: 1px;
            margin-bottom: 3px;
            background-color: rgb(255, 255, 255);
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
        <div class="container-fluid">
        <a class="navbar-brand" href="#">Camping Menu</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-header" aria-controls="navbar-header" aria-expanded="false" aria-label="ナビゲーションの切替">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbar-header">
            <ul class="navbar-nav me-auto">
            <li class="nav-item"><a class="nav-link active" aria-current="page" href="#">ホーム</a></li>
            <li class="nav-item"><a class="nav-link" href="../todo">メモ</a></li>
            <li class="nav-item"><a class="nav-link" href="../eatMenu">献立</a></li>
            </ul>
        </div>
        </div>
    </nav>

    <br>
    <br>
    <br>

    <div id="app">
        <div class="container-lg">
            <div style="position: relative; margin-top: 10px;">
                <h1 style="text-align: center;">献立</h1>
                <button class="btn btn-primary" v-on:click="doAdd" style="position: absolute; top: 0px; left: 0px;">追加</button>
                <button class="btn btn-success" v-on:click="addItem" style="position: absolute; top: 0px; right: 0px;">登録</button>
                <button class="btn btn-danger" v-on:click="deleteAll" style="position: absolute; top: 0px; right: 70px;">一括削除</button>
            </div>

            <div class="row">
                <div class="col-6">
                    <div style="position: relative">
                        <input type="text" class="form-control" placeholder="自由入力" v-model="myInput">
                        
                        <draggable class="list-group" v-model="freeLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in freeLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(freeLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>
                    
                    <br>

                    <select v-model="selected" class="form-select" id="selectBox1" v-on:change="changeSelectBox">
                        <option v-for="option in kuomokuLists" v-bind:value="option.value">
                            {{ option.title }}
                        </option>
                    </select>

                    <div id="box1" class="box">
                        <!--グループの書き方別パターン   :options="{group:'ITEMS'}"   -->
                        <draggable v-model="items" :group="{ name: 'people', pull: 'clone', put: false }" @end="draggableEnd" id="myItem1">
                            <li class="list-group list-unstyled" v-for="item, index in items" :key="item.no" style="padding-left: 10px;">{{item.name}}</li>
                        </draggable>
                    </div>
                </div>
                <div class="col-6">
                    <!-- テーブル実装したければコメントイン
                    <table class="table">
                        <tbody is="draggable" v-model="items" :options="{group:'ITEMS'}">
                            <tr v-for="item in items" :key="item.index">
                                <td>{{ item.name }}</td>
                            </tr>
                        </tbody>
                    </table>
                    -->
                    

                    
                    <div style="background-color: rgb(199, 240, 231); padding: 3px;">
                        <h2>月曜日</h2>
                        
                        <draggable class="list-group" v-model="mondayLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in mondayLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(mondayLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>

                    <div style="background-color: rgb(199, 240, 231); padding: 3px;">
                        <h2>火曜日</h2>
                        
                        <draggable class="list-group" v-model="tuesdayLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in tuesdayLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(tuesdayLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>
                    
                    <div style="background-color: rgb(199, 240, 231); padding: 3px;">
                        <h2>水曜日</h2>
                        
                        <draggable class="list-group" v-model="wednesdayLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in wednesdayLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(wednesdayLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>

                    <div style="background-color: rgb(199, 240, 231); padding: 3px;">
                        <h2>木曜日</h2>
                        
                        <draggable class="list-group" v-model="thursdayLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in thursdayLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(thursdayLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>

                    <div style="background-color: rgb(199, 240, 231); padding: 3px;">
                        <h2>金曜日</h2>
                        
                        <draggable class="list-group" v-model="fridayLists" tag="ul" :group="{ name: 'people', pull: true, put: true }" @end="draggableEnd">
                            <li v-for="item, index in fridayLists" :key="item.no" class="myli" style="position: relative">
                                {{item.name}}
                                <span class="del" v-on:click="doDelete(fridayLists, index, '')" style="position: absolute; right: 10px; color: #f00;">[削除]</span>
                            </li>
                        </draggable>
                    </div>

                    <br><br>
                </div>
            </div><!--row-->
        </div><!--container-->
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue@2.5.8/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.23.2/vuedraggable.umd.min.js"></script>
    <script src="/javascripts/myCommon.js"></script>

    <script>
        const draggable = window['vuedraggable'];

        new Vue({ 
            el: "#app",
            components: {
                'draggable': draggable,
            },
            data: { 
                myInput: '',
                selected: '',
                freeLists: [],
                mondayLists: [],
                tuesdayLists: [],
                wednesdayLists: [],
                thursdayLists: [],
                fridayLists: [],
                kuomokuLists: [
                    {"title" : "", "value" : 0},
                    {"title" : "肉", "value" : 1},
                    {"title" : "魚", "value" : 2},
                ],
                items:[], 
            },
            mounted() {
                window.onload = ()=>{
                    //URLを取得
                    let url = getServerURL() + '/eatMenu/getItem';

                    //保存したデータを取得する
                    fetch(url,
                        {
                            method: 'GET',
                            headers: {
                                        'Content-Type': 'application/json'
                                        },
                        })
                        .then((response) => {
                            if(response.ok) {
                                return response.json();
                            } else {
                                throw new Error();
                            }
                        })
                        .then(json => {   
                            var setMon = [];
                            var setTue = [];
                            var setWed = [];
                            var setThu = [];
                            var setFri = [];

                            var monCount = 0;
                            var tueCount = 0;
                            var wedCount = 0;
                            var thuCount = 0;
                            var friCount = 0;

                            for (var i = 0; i < json.length; i++) {
                                if (json[i].week == 1) {
                                    //月曜日(直接this.mondayListsに入れると画面に反映されない..なぜだろう？そのため、一度変数に落としている)
                                    setMon[monCount] = {
                                        no : json[i].no,
                                        name : json[i].name,
                                        week : json[i].week,
                                    }
                                    monCount++;
                                }
                                if (json[i].week == 2) {
                                    //火曜日
                                    setTue[tueCount] = {
                                        no : json[i].no,
                                        name : json[i].name,
                                        week : json[i].week,
                                    }
                                    tueCount++;
                                }
                                if (json[i].week == 3) {
                                    //水曜日
                                    setWed[wedCount] = {
                                        no : json[i].no,
                                        name : json[i].name,
                                        week : json[i].week,
                                    }
                                    wedCount++;
                                }
                                if (json[i].week == 4) {
                                    //木曜日
                                    setThu[thuCount] = {
                                        no : json[i].no,
                                        name : json[i].name,
                                        week : json[i].week,
                                    }
                                    thuCount++;
                                }
                                if (json[i].week == 5) {
                                    //金曜日
                                    setFri[friCount] = {
                                        no : json[i].no,
                                        name : json[i].name,
                                        week : json[i].week,
                                    }
                                    friCount++;
                                }
                            }

                            this.mondayLists = setMon;
                            this.tuesdayLists = setTue;
                            this.wednesdayLists = setWed;
                            this.thursdayLists = setThu;
                            this.fridayLists = setFri;
                        }) 
                        .catch(function (error) {
                            alert(error);
                        });    
                }
            },
            methods: {
                changeSelectBox() {
                    if (this.selected == 0) {
                        this.items = [];
                    } else {
                        //URLを取得
                        let url = getServerURL() + '/eatMenu/getCategory';

                        var json = {data: this.selected};

                        //サーバーにデータを追加する
                        fetch(url,
                            {
                                method: 'POST',
                                headers: {
                                            'Content-Type': 'application/json'
                                            },
                                //★JSON形式で通信する指定があるので、JSONでなければ渡せない
                                body: JSON.stringify(json)
                            })
                            .then((response) => {
                                if(response.ok) {
                                    return response.json();
                                } else {
                                    alert('エラーが発生しました。管理者へ連絡してください。')
                                    throw new Error();
                                }
                            })
                            .then(json => {   
                                var a = json;
                                this.items = json;
                            }) 
                            .catch(function (error) {
                                //alert(error);
                            });     
                    }
                },
                draggableEnd(event) {
                    console.log(event)
                    //this.items = 
                },
                deleteAll: function() {
                    var result = window.confirm("全て削除しますが、よろしいですか？\n\n※サーバーのデータは消えません。");

                    if (result) {
                        this.mondayLists = [];
                        this.tuesdayLists = [];
                        this.wednesdayLists = [];
                        this.thursdayLists = [];
                        this.fridayLists = [];
                    }
                },
                doAdd:function(){
                    this.freeLists.push(
                    {
                        no: 1,
                        name: this.myInput,
                    })
                },
                doDelete: function(delItems, index){
                    delItems.splice(index, 1);
                },
                addWeekData: function(json, list, num) {
                    for (var i = 0; i < list.length; i++){
                        var addData = {
                            week: num,
                            no: i,
                            data: list[i].name
                        };
                        json.push(addData);
                    }

                    return json;
                },
                addItem:function(event){
                    var json = [];

                    //曜日データを追加
                    json = this.addWeekData(json, this.mondayLists, 1);
                    json = this.addWeekData(json, this.tuesdayLists, 2);
                    json = this.addWeekData(json, this.wednesdayLists, 3);
                    json = this.addWeekData(json, this.thursdayLists, 4);
                    json = this.addWeekData(json, this.fridayLists, 5);

                    //URLを取得
                    let url = getServerURL() + '/eatMenu/insData';

                    //サーバーにデータを追加する
                    fetch(url,
                        {
                            method: 'POST',
                            headers: {
                                        'Content-Type': 'application/json'
                                        },
                            //★JSON形式で通信する指定があるので、JSONでなければ渡せない
                            body: JSON.stringify(json)
                        })
                        .then((response) => {
                            if(response.ok) {
                                alert('登録しました。');
                            } else {
                                alert('エラーが発生しました。管理者へ連絡してください。');
                                throw new Error();
                            }
                        })
                        .then(json => {   

                        }) 
                        .catch(function (error) {
                            //alert(error);
                        });    
                },
            }
        });
    </script>
  </body>
</html>
